{
    "folders": [
        {
            "path": "."
        }
    ],
    "settings": {
        //Clang format...
        "clang-format.executable": "clang-format",
        "editor.formatOnSave": false,

        "terminal.integrated.scrollback": 10000,
        "clangd.arguments": [
            "--header-insertion=never"
        ],
        "cmake.configureOnOpen": false,
        "debug.allowBreakpointsEverywhere": true,
        "debug.openDebug": "openOnSessionStart",
        "[cpp]": {
            "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
        },
        "editor.detectIndentation": false,
        "task.autoDetect": "off",
        "debug.console.closeOnEnd": true,
        "debug.openExplorerOnEnd": true,
        "workbench.editor.scrollToSwitchTabs": true,
        "window.menuBarVisibility": "toggle",
        "window.titleBarStyle": "custom",
        "debug.inlineValues": "on",
        "C_Cpp.intelliSenseEngine": "Disabled",
        "CppHelper.SourceNotFoundBehavior": "Create source file",
        "debug.showBreakpointsInOverviewRuler": true,
        "debug.terminal.clearBeforeReusing": true,
        "editor.cursorBlinking": "expand",
        "files.associations": {
            "*.flex": "lex",
            "*.yy": "bison"
        },
        "c-cpp-flylint.clang.blocks": false,
        "c-cpp-flylint.lizard.enable": false,
        "c-cpp-flylint.flexelint.enable": false,
        "c-cpp-flylint.clang.configFile": ".clang-tidy",
        "c-cpp-flylint.clang.enable": false,
        "c-cpp-flylint.cppcheck.suppressions": [
            "unusedStructMember",
            "unreadVariable",
            "knownConditionTrueFalse",  /// Might be good, but annoying when using a macro for either debug or non-debug mode...
            "cstyleCast"                /// Already covered by Clang-Tidy...
        ],
        "c-cpp-flylint.excludeFromWorkspacePaths": [
            "deps"
        ],
        "c-cpp-flylint.flawfinder.severityLevels": {

            "0": "Hint",
            "1": "Hint",
            "2": "Hint",
            "3": "Warning",
            "4": "Warning",
            "5": "Error"
        },
        "editor.peekWidgetDefaultFocus": "editor",
        "editor.minimap.scale": 1,
        "editor.minimap.maxColumn": 50,
        "editor.minimap.renderCharacters": false,
        "window.zoomLevel": 0,
        "gitlens.views.commits.files.layout": "list",
        "activitusbar.combineWorkspaceSettings": true,
        "activitusbar.views": [
            {
                "name": "explorer",
                "codicon": "explorer-view-icon"
            },
            {
                "name": "command.workbench.view.extension.cmake__viewContainer",
                "codicon": "project",
                "tooltip": "Cmake Project"
            },
            {
                "name": "search",
                "codicon": "search-view-icon"
            },
            {
                "name": "scm",
                "codicon": "source-control-view-icon"
            },
            {
                "name": "command.git-graph.view",
                "codicon": "git-compare",
                "tooltip": "git-graph"
            },
            {
                "name": "debug",
                "codicon": "run-view-icon"
            },
            {
                "name": "extensions",
                "codicon": "extensions-view-icon"
            },
        ],
        "git.fetchOnPull": true,
        //"activitusbar.toggleSidebar": false
        "git-graph.showStatusBarItem": true,
        "taskExplorer.showLastTasks": false,
        "files.exclude": {
            "**/.git": true,
            "**/.svn": true,
            "**/.hg": true,
            "**/CVS": true,
            "**/.DS_Store": true,
            "**/Thumbs.db": true,
            "**/.idea": true,
            ".idea": true,
            "**/.cache": true,
            ".cache": true,
            "**/_LICENSES": true,
            "_LICENSES": true,
            ".vscode": true,
            ".clang-tidy-ignore": true,
            "3D_VEngine.code-workspace": true,
            "README_VSCODE_CLANGD_PROBLEMS.txt": true,
            ".clangd": true,
            ".gitignore": true,
            "**/.gitignore": true,
            "assets/shaders/history_blob": true,
            "assets/shaders/compile_shaders.sh": true,
            "libs": true,
            "example_trees": true,
            "include_glut": true,
            "behaviorTree.sln": true,
            "behaviorTree.vcxproj": true,
            "behaviorTree.vcxproj.filters": true,
            "behaviorTree.vcxproj.user": true,
            "otherf.ttf": true
        },
        "explorerExclude.backup": {},
        "workspace.isHidden": true,
        "output.smartScroll.enabled": false, // annoying...
        "glsllint.glslangValidatorArgs": "-V",
        "shaderc-lint.defaultGLSLVersion": "450",
        "shaderc-lint.shadercOutputDir": "assets/shaders/",
        "cmake.configureArgs": [
            "-DCMAKE_BUILD_TYPE=cmake_project",
            "-DCMAKE_CXX_COMPILER=clang++"
        ],
        //"cmake.generator": "Unix Makefiles",     //TODO: how do we make this different between platforms?...
        "cmake.generator": "Ninja", //TODO: how do we make this different between platforms?...
        "cmake.buildDirectory": "${workspaceFolder}/build/cmake_project",
        "cmake.copyCompileCommands": "${workspaceFolder}/build/compile_commands.json",
        "glsl-linter.validatorArgs": [
            "-V"
        ],
        "glsl-linter.validatorPath": "glslangValidator",
        "file_peek.activeLanguages": [
            "typescript",
            "javascript",
            "python",
            "c++",
            "c"
        ],
        "file_peek.searchFileExtensions": [
            ".js",
            ".ts",
            ".html",
            ".css",
            ".scss",
            ".h",
            ".cpp",
            ".c",
            ".cc",
            ".hpp"
        ],
        "workbench.colorCustomizations": {
            "minimapSlider.hoverBackground": "#00830075",
            "minimapSlider.background": "#00830075"
        },
        "lldb.launch.expressions": "native", //<- For some reason this causes following error in Watch: error couldn't allocate space for materialized struct
        "lldb.showDisassembly": "never",
        "lldb.dereferencePointers": true,
        "lldb.consoleMode": "commands",
        "editor.wordBasedSuggestionsMode": "allDocuments",
        "debug.console.historySuggestions": false,
        "editor.suggest.preview": true,
        "editor.suggest.showStatusBar": true,
        "editor.quickSuggestions": {
            "other": "on",
            "comments": "on",
            "strings": "on"
        },
        "editor.snippetSuggestions": "bottom",
        "cmake.configureOnEdit": false,
    },
    "extensions": {
        "recommendations": [
            "vadimcn.vscode-lldb",            
            "mhutchie.git-graph",
            "donjayamanne.githistory",
            "eamodio.gitlens",
            "cheshirekow.cmake-format",
            "ms-vscode.cmake-tools",
            "twxs.cmake",
            "sarper.close-sidebar-on-debug-session-end",
            "llvm-vs-code-extensions.vscode-clangd",
            "amiralizadeh9480.cpp-helper",
            "jbenden.c-cpp-flylint",
            "gruntfuggly.activitusbar",
            "spmeesseman.vscode-taskexplorer",
            "nick-rudenko.back-n-forth",            
            "fooxly.workspace",
            "devtbi.vscode-cppinsights"            
        ]
    }

}